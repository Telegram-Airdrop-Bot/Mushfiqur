{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "/portfolio",
  "redirects": [
    {
      "source": "/portfolio",
      "destination": "/portfolio/",
      "basePath": false,
      "internal": true,
      "statusCode": 308,
      "regex": "^/portfolio$"
    },
    {
      "source": "/:file((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+)/",
      "destination": "/:file",
      "internal": true,
      "missing": [
        {
          "type": "header",
          "key": "x-nextjs-data"
        }
      ],
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+))/$"
    },
    {
      "source": "/:notfile((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+)",
      "destination": "/:notfile/",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+))$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/Admin",
      "regex": "^/Admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Admin(?:/)?$"
    },
    {
      "page": "/Auth",
      "regex": "^/Auth(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Auth(?:/)?$"
    },
    {
      "page": "/Index",
      "regex": "^/Index(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Index(?:/)?$"
    },
    {
      "page": "/NotFound",
      "regex": "^/NotFound(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/NotFound(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}